{"version":3,"file":"static/js/688.f3343bd6.chunk.js","mappings":"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","sources":["components/button/Button.styled.js","components/signUp/SignUp.styled.js","components/signIn/SignIn.jsx","components/signUp/SignUp.jsx","components/button/Button.jsx","pages/authPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Text = styled.span`\n  :hover,\n  :focus {\n    color: #1d283a;\n  }\n`;\nexport { Text };\n","import styled from 'styled-components';\nimport { Field } from 'formik';\nconst Container = styled.div`\n  padding: 48px;\n`;\n\nconst Input = styled(Field)`\n  width: 100%;\n`;\nexport { Container, Input };\n","import { Formik, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { register } from '../../redux/auth/authOperations';\nimport {\n  LinkTo,\n  Logo,\n  LogoSpan,\n} from 'components/sharedLayot/SharedLayout.styled';\nimport { Container, Input } from '../signUp/SignUp.styled';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport SignUp from '../signUp/SignUp';\n\nconst initialValues = {\n  displayName: '',\n  password: '',\n};\n\nconst SignIn = () => {\n  const [showPassword, setShowPassword] = useState(true);\n  const [toggleModal, setToggleModal] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const onHomePage = () => {\n    navigate('/Home');\n  };\n  const hendleSubmit = (values, { resetForm }) => {\n    dispatch(\n      register({\n        username: values.username,\n        displayName: values.displayName,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n  useEffect(() => {}, [toggleModal]);\n\n  return !toggleModal ? (\n    <Container id={'signIn'}>\n      <nav>\n        <LinkTo to=\"/home\">\n          <Logo>InCode</Logo> <br /> <LogoSpan>Finance</LogoSpan>\n        </LinkTo>\n      </nav>\n      <h1>Sign In</h1>\n      <Formik initialValues={initialValues} onSubmit={hendleSubmit}>\n        <Form style={{ width: '100%' }}>\n          <label>\n            <p>User Name</p>\n            <Input\n              type=\"text\"\n              name=\"displayName\"\n              placeholder=\"Example123\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n          <label>\n            <p>Password</p>\n            <div style={{ position: 'relative' }}>\n              <Input\n                type={showPassword ? 'password' : 'text'}\n                name=\"password\"\n                placeholder=\"at least 8 symbols\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n              />\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n                sx={{\n                  position: 'absolute',\n                  top: '-50%',\n                  right: '5%',\n                }}\n              >\n                {showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </div>\n          </label>\n          <br />\n\n          <button type=\"submit\" onClick={onHomePage}>\n            Sign in\n          </button>\n        </Form>\n      </Formik>\n      <div>\n        Don`t have account yet.\n        <button onClick={() => setToggleModal(true)}>Go to Sign Up</button>\n      </div>\n    </Container>\n  ) : (\n    <SignUp />\n  );\n};\n\nexport default SignIn;\n","// import SharedLayout from 'components/sharedLayot/SharedLayout';\nimport * as React from 'react';\nimport { Formik, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { register } from '../../redux/auth/authOperations';\nimport {\n  LinkTo,\n  Logo,\n  LogoSpan,\n} from 'components/sharedLayot/SharedLayout.styled';\nimport { Container, Input } from './SignUp.styled';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport SignIn from '../signIn/SignIn';\n\nconst initialValues = {\n  username: '',\n  displayName: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst SignUp = () => {\n  const dispatch = useDispatch();\n\n  const hendleSubmit = (values, { resetForm }) => {\n    if (values.password === values.confirmPassword) {\n      dispatch(\n        register({\n          username: values.username,\n          displayName: values.displayName,\n          password: values.password,\n        })\n      );\n      resetForm();\n    } else {\n      return alert('Confirm Password is wrong');\n    }\n  };\n\n  const [showPassword, setShowPassword] = useState(true);\n  const [toggleModal, setToggleModal] = useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  useEffect(() => {}, [toggleModal]);\n\n  return !toggleModal ? (\n    <Container>\n      <nav>\n        <LinkTo to={'/home'}>\n          <Logo>InCode</Logo> <br /> <LogoSpan>Finance</LogoSpan>\n        </LinkTo>\n      </nav>\n      <h1>Sign Up</h1>\n      <Formik initialValues={initialValues} onSubmit={hendleSubmit}>\n        <Form style={{ width: '100%' }}>\n          <label>\n            <p>Full Name</p>\n            <Input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Example Name\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <label>\n            <p>User Name</p>\n            <Input\n              type=\"text\"\n              name=\"displayName\"\n              placeholder=\"Example123\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n          <label>\n            <p>Password</p>\n            <div style={{ position: 'relative' }}>\n              <Input\n                type={showPassword ? 'password' : 'text'}\n                name=\"password\"\n                placeholder=\"at least 8 symbols\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n              />\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n                sx={{\n                  position: 'absolute',\n                  top: '-50%',\n                  right: '5%',\n                }}\n              >\n                {showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </div>\n          </label>\n          <label>\n            <p>Confirm Password</p>\n            <div style={{ position: 'relative' }}>\n              <Input\n                type={showPassword ? 'password' : 'text'}\n                name=\"confirmPassword\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n              />\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n                sx={{\n                  position: 'absolute',\n                  top: '-50%',\n                  right: '5%',\n                }}\n              >\n                {showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </div>\n          </label>\n          <br />\n\n          <button type=\"submit\">Sign up</button>\n        </Form>\n      </Formik>\n      <div>\n        I have an account.{' '}\n        <button onClick={() => setToggleModal(true)}>Go to Sign In</button>\n      </div>\n    </Container>\n  ) : (\n    <SignIn />\n  );\n};\n\nexport default SignUp;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Backdrop from '@mui/material/Backdrop';\nimport { Text } from './Button.styled';\nimport SignUp from 'components/signUp/SignUp';\nimport SignIn from 'components/signIn/SignIn';\nimport Modal from '@mui/material/Modal';\n\nconst style = {\n  position: 'absolute',\n  height: '100vh',\n  left: '50%',\n  transform: 'translate(-50%)',\n  width: 424,\n  bgcolor: '#1d283a',\n};\n\nexport default function BasicModal({ text, onClick }) {\n  const [open, setOpen] = React.useState(onClick);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div id=\"model\">\n      <Button\n        onClick={handleOpen}\n        variant=\"h6\"\n        style={{ background: '#539713', marginRight: 15 }}\n      >\n        <Text>{text}</Text>\n      </Button>\n      <Backdrop\n        sx={{ background: '#F1F2F1', zIndex: theme => theme.zIndex.drawer + 1 }}\n        open={open}\n        // onClick={handleClose}\n      >\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style}>\n            {text === 'Sign Up' || text === 'Go to Sign up' ? (\n              <SignUp />\n            ) : (\n              <SignIn />\n            )}\n          </Box>\n        </Modal>\n      </Backdrop>\n    </div>\n  );\n}\n","import Button from '../components/button/Button';\n\nconst authPage = () => {\n  const signUp = 'Sign Up';\n  const signIN = 'Sign In';\n  return (\n    <>\n      <Button text={signUp} />\n      <Button text={signIN} />\n    </>\n  );\n};\n\nexport default authPage;\n"],"names":["Text","styled","Container","Input","Field","initialValues","displayName","password","useState","showPassword","setShowPassword","toggleModal","setToggleModal","navigate","useNavigate","dispatch","useDispatch","useEffect","id","to","onSubmit","values","resetForm","register","username","style","width","type","name","placeholder","title","required","position","IconButton","onClick","show","onMouseDown","event","preventDefault","edge","sx","top","right","VisibilityOff","Visibility","confirmPassword","handleClickShowPassword","handleMouseDownPassword","alert","height","left","transform","bgcolor","BasicModal","text","React","open","setOpen","Button","variant","background","marginRight","Backdrop","zIndex","theme","drawer","Modal","onClose","Box"],"sourceRoot":""}